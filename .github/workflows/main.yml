name: Docker Build and Push with Kustomize

on:
  push:
    branches:
      - master  # Adjust the branch name as needed

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    - name: Get Tags
      id: tags
      run: |
        git fetch --tags
        echo "Tags fetched"      
    - name: Get Latest Tag
      id: latest-tag
      run: |
        latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
        echo "::set-output name=tag::$latest_tag"
        echo "$latest_tag"
        echo "$name"
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}        
    - name: Docker Build and Push
      env:
        TAG: ${{ steps.latest-tag.outputs.tag }}
      run: |
        # Your Docker build and push commands using Kustomize here
        # Replace <your-image-name> with your actual image name
        docker build -t gaurav112/myapp:${TAG} .
        docker push gaurav112/myapp:${TAG} 
    - name: Update Kustomization
      env:
        TAG: ${{ steps.latest-tag.outputs.tag }}
      run: |
        chmod 777 manifests
        sed -i "s/\$TAG/$TAG/" manifests/kustomization.yaml
        
    - name: Set Git Configurations
      run: |
        git config --global user.email "gauravkhatri0595@gmail.com"
        git config --global user.name "gaurav"
           
    - name: Set up Kustomize
      env:
        TAG: ${{ steps.latest-tag.outputs.tag }}    
      run: |
        curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | bash
        chmod +x kustomize
        mv kustomize /usr/local/bin
        cd manifests
        ls
        kustomize build . > ../kustomization/manifests.yaml
        cd ..
        sed -i "s/\$TAG/$TAG/" kustomization/manifests.yaml
        cat kustomization/manifests.yaml
        git add .
        git commit -m "deployment file created"
        git push origin --delete deploy
        git branch deploy
        git checkout deploy
        rm -rf *
        git checkout master -- kustomization
        git add .
        git commit -m "deploy with version $TAG"  
        git push origin deploy        
